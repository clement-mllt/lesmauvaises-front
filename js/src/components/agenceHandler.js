import {gsap} from "gsap";
import {ScrollTrigger} from "gsap/ScrollTrigger.js";
import {ScrollToPlugin} from "gsap/ScrollToPlugin.js";
import {Draggable} from "gsap/Draggable.js";
import {MotionPathPlugin} from "gsap/MotionPathPlugin.js";
import {EaselPlugin} from "gsap/EaselPlugin.js";
import {PixiPlugin} from "gsap/PixiPlugin.js";
import {TextPlugin} from "gsap/TextPlugin.js";
import {CSSPlugin} from "gsap/CSSPlugin.js";
import {DrawSVGPlugin} from "gsap/DrawSVGPlugin.js";
import {SplitText} from "gsap/SplitText.js";
import {MorphSVGPlugin} from "gsap/MorphSVGPlugin.js";
import {menuHandler} from "./menuHandler";
import {InertiaPlugin} from "gsap/InertiaPlugin";
import {prepareAnimationHandler} from "./prepareAnimationHandler";
import {letterSource} from "./letterSource";

import Swiper from "swiper";
import "swiper/css";
import {Value} from "sass";
import {utilsHandler} from "./utilsHandler";
import { blur } from "d3";

gsap.registerPlugin(CSSPlugin);
gsap.registerPlugin(
  ScrollTrigger,
  ScrollToPlugin,
  Draggable,
  MotionPathPlugin,
  MorphSVGPlugin,
  SplitText,
  InertiaPlugin,
  EaselPlugin,
  PixiPlugin,
  TextPlugin,
  DrawSVGPlugin
);

gsap.registerPlugin(ScrollTrigger);

export class agenceHandler {
  static onEnter = false;
  static switchWhy() {
    const targets = document.querySelectorAll(".target-quality");

    const pathLineElement = document.querySelectorAll(".line-decoration path");

    gsap.set(pathLineElement, {
      drawSVG: "0%",
    });

    targets.forEach((target) => {
      const tl = prepareAnimationHandler.animationSwitch(
        target.closest(".quality")
      );

      target.animationTimeline = tl;

      target.addEventListener("mouseover", () => {
        target.animationTimeline.play();
      });

      target.addEventListener("mouseout", () => {
        target.animationTimeline.reverse();
      });
    });
  }

    const text = new SplitText(".container-text h2", { type: "words" });
    const container = document.querySelector(".section-agency");
  static animateTextOpacityOnScroll() {

  static timelineDetailTeam(team) {
    const tl = gsap.timeline();
  
    const containerShoot = document.getElementById('backgroundShoot');
    containerShoot.classList.add('no-click');
    const containerPic = document.getElementById('backgroundPic');
    const containerBlur = document.getElementById('backgroundBlur');
    const containerText = document.getElementById('backgroundText');
    
    const containerRect = containerPic.getBoundingClientRect(); 
  
    const detailTeam = team.getBoundingClientRect();
  
    const targetX = containerRect.left + containerRect.width / 2 - (detailTeam.left + detailTeam.width / 2);
    const targetY = containerRect.top + containerRect.height / 2 - (detailTeam.top + detailTeam.height / 2);
  
  
    tl.to(containerBlur,{
      zIndex : 15,
    },"sync").to(team,{
      zIndex : 16,
    },'sync').to(containerText,{
      zIndex : 16,
    },'sync');

    tl.to(team, {
      duration: 5,
      x: targetX,
      y: targetY,
      scale: 2.5, 
      ease: "power2.out",
    },"sync").to(containerBlur,{
      duration :5,
      filter:"blur(50px)"
  },"sync");

  tl.call(() => {
    container.classList.remove('no-click'); 
  });
  
    return tl;
  }
  
  static shootTeam() {
    const timelineShoot = agenceHandler.timelineShoot();

    ScrollTrigger.create({
      animation: timelineShoot,
      trigger: "#containerShoot",
      start: "top top",
      end: "bottom top",
      scrub: true,
      markers: true,
      anticipePin: 1,
      pin: true,
    });

    agenceHandler.handleTeamClick();
  }

  static timelineShoot() {
    const tl = gsap.timeline();
    const text = new SplitText(".main-title-shoot", {type: "chars"});
    const letters = text.chars;
    const containerGame = document.getElementById("gameShoot");
    const teams = document.querySelectorAll(".team");

    const teamsName = [
      { name: "clement", ax: -20, ay: 20 },
      { name: "carla", ax: -20, ay: 20 },
      { name: "ines", ax: -20, ay: 20 },
      { name: "lucas", ax: -20, ay: 20 },
      { name: "matteo", ax: -20, ay: 20 },
    ];

    tl.from(letters, {
      opacity: 0,
      y: 50,
      duration: 1,
      stagger: 0.1,
    })
      .to(letters, {
        opacity: 0,
        y: 50,
        duration: 1,
        stagger: 0.1,
      })
      // .set(".menu", {
      //   backgroundColor: "transparent",
      //   onComplete: () => {
      //     gsap.from(teams, {
      //       opacity: 0,
      //       duration: 4,
      //       stagger: 0.3,
      //     });
      //     teams.forEach((team, i) => {
      //       gsap.to(team, {
      //         skewY: () => gsap.utils.random(-20, 20),
      //         skewX: () => gsap.utils.random(-10, 10),
      //         duration: 0.2,
      //         ease: "power1.inOut",
      //         yoyo: true,
      //         delay: i * 0.1,
      //         repeat: -1,
      //         onRepeat: () => {
      //           gsap.to(team, {
      //             skewY: () => gsap.utils.random(-20, 20),
      //             skewX: () => gsap.utils.random(-10, 10),
      //             duration: 0.2,
      //             ease: "power1.inOut",
      //             yoyo: true,
      //             delay: i * 0.1,
      //             repeat: -1,
      //           });
      //         },
      //       });
      //     });
      //   },
      // })
      .to(containerGame, {
        zIndex: 10,
        border: "red 1px solid",
      })
      .to(letters, {
        x: 20000,
        duration: 100,
      });

    console.log(tl); // Vérifie si la timeline est générée
    return tl;
  }



  static animateTextOpacityOnScroll() {
    const text = new SplitText(".container-text h2", {type: "words"});
    const container = document.querySelector(".section-agency");

    const scrollTriggerConfig = {
      trigger: container,
      scrub: true,
      start: "top+=100px bottom",
      end: `+=${container.clientHeight - 200}px`,
      ease: "power4.out",
    };

    const timeline = gsap.timeline({scrollTrigger: scrollTriggerConfig});

    text.words.forEach((word) => {
      const wordTimeline = gsap.timeline();

      wordTimeline.from(word, {
        opacity: 0,
        duration: 0.5,
      });

      if (word.innerHTML === "mauvaises") {
        wordTimeline.to(word, {
          onComplete: () => {
            const svgLineErase = `<svg class="erase-word" width="688" height="100" viewBox="0 0 683 74" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M0,50 L688,50" stroke="#28282D" stroke-width="17" />
            </svg>`;
            word.innerHTML += svgLineErase;

            const svgElement = word.querySelector(".erase-word");
            gsap.fromTo(
              svgElement,
              {drawSVG: "0%"},
              {drawSVG: "100%", duration: 1}
            );
          },
        });
      }

      if (word.innerHTML === "unique.") {
        console.log("ICI LE MOT", word);

        word.innerHTML = "";
        Object.assign(word.style, {
          height: "10vh",
          width: "10vw",
        });

        word.innerHTML += `
         <svg class="line-unique" width="736" height="764" viewBox="0 0 736 764" fill="none" xmlns="http://www.w3.org/2000/svg">
            <mask id="mask0_6727_57297" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="736" height="764">
            <mask id="path-1-inside-1_6727_57297" fill="${colorCurrent}">
            <path d="M10.0426 5.60004C9.23861 8.80004 8.16657 16 7.76455 21.6C6.69252 32.6667 4.41444 34.5333 4.41444 24.2667C4.41444 18.6667 4.28043 18.4 2.40436 20.8C0.126282 23.7334 -0.275732 25.8667 1.73434 24.6667C2.53837 24.1334 3.07439 25.8667 3.07439 28.9333C3.07439 31.8667 3.61041 34.6667 4.41444 35.4667C5.21846 36.2667 4.95045 37.8667 3.4764 40C1.60033 42.6667 1.33233 46.2667 1.46633 62.5334C1.60034 73.2001 1.19832 85.4667 0.662301 89.6C-1.34777 102.8 1.46633 166.267 5.75448 210C9.90863 251.333 22.9071 318.4 32.6894 348.667C36.1736 359.6 37.7816 366.8 37.2456 369.067C36.7096 371.733 37.3796 374 39.9257 377.333C41.8018 379.867 44.3479 385.333 45.5539 389.333C48.904 400.8 62.8405 435.067 71.6848 453.333C76.107 462.533 79.8591 471.2 80.1271 472.667C80.2611 474.133 80.5292 475.867 80.6632 476.4C80.6632 477.067 81.3332 477.2 82.0032 476.8C82.6732 476.4 86.5594 481.867 90.5795 489.067C100.63 506.533 130.513 552.133 141.635 567.067C146.728 573.733 150.882 580.133 151.15 581.2C151.284 582.4 152.222 583.333 153.16 583.333C154.232 583.333 156.644 586.8 158.788 590.933C160.798 595.2 163.746 598.8 165.22 599.333C166.694 599.733 171.384 604.533 175.807 609.733C180.229 615.067 187.331 622.933 191.887 627.2C196.309 631.6 199.659 635.6 199.391 636.133C198.989 636.667 200.195 638 201.803 639.067C203.546 640.133 211.184 646.933 218.956 654C236.243 670 259.694 687.2 288.505 705.067C290.381 706.267 292.123 707.2 292.525 707.2C292.927 707.067 301.637 711.2 311.955 716.267C322.274 721.333 337.684 727.6 346.127 730.267C358.991 734.4 361.001 735.333 358.187 736.267C356.043 736.933 357.115 737.067 361.537 736.667C365.959 736.267 370.784 736.933 375.608 738.533L382.978 741.067L376.278 740.533L369.577 740L376.278 742C383.782 744.267 391.822 744.667 386.998 742.667C384.586 741.6 384.586 741.467 387.668 741.467C389.544 741.467 398.255 742.267 407.099 743.333C415.943 744.4 425.591 745.333 428.54 745.467C431.488 745.467 433.096 745.867 432.158 746.267C431.354 746.533 430.55 747.467 430.55 748.267C430.55 749.067 432.694 749.333 436.312 748.8C439.394 748.267 443.816 748 445.96 748.133C472.627 749.733 507.87 746.267 527.837 739.867C534.939 737.6 543.516 735.333 546.866 734.667C555.844 733.067 585.191 721.333 600.468 713.333C636.247 694.4 663.45 675.467 686.901 653.333C694.941 645.733 701.239 640.667 701.239 641.867C701.239 643.2 702.043 643.6 703.249 643.2C704.724 642.533 704.991 642.933 704.455 644.533C704.053 645.733 704.321 646.667 705.125 646.667C707.94 646.667 706.6 649.333 703.249 650.667C701.373 651.333 699.899 652.267 699.899 652.667C699.899 653.2 700.569 653.067 701.239 652.667C702.713 651.733 706.6 655.067 706.6 657.2C706.6 658 705.662 658.667 704.589 658.667C703.517 658.667 702.579 657.733 702.579 656.667C702.579 655.6 702.043 654.667 701.239 654.667C700.569 654.667 699.899 655.467 699.899 656.533C699.899 657.6 699.095 658.8 698.157 659.067C697.353 659.467 698.693 659.867 701.239 660C705.528 660.133 705.662 660.267 702.847 661.467C701.105 662.133 698.961 662.267 698.291 661.733C697.353 661.2 697.219 661.6 697.889 662.667C699.095 664.667 699.229 666.133 700.435 688.667C701.239 700.8 700.837 707.067 699.363 714.4C698.157 719.733 697.219 726.267 697.219 728.8C697.219 731.467 696.549 734.667 695.745 736.133C694.941 737.733 694.807 739.467 695.611 740.4C696.281 741.333 696.683 744.267 696.549 747.067C696.415 749.867 696.817 752.4 697.487 752.8C698.157 753.2 697.621 754.4 696.281 755.467C694.941 756.4 694.539 757.333 695.343 757.333C696.281 757.333 696.817 758.4 696.683 759.733C696.549 761.333 697.755 762.133 700.569 762.4C702.847 762.533 704.053 762.267 703.249 761.733C700.435 759.6 699.095 755.2 700.033 751.333C700.703 748.133 700.971 748 701.105 750.267C701.105 752 701.775 753.333 702.445 753.333C703.115 753.333 703.651 752.533 703.517 751.6C703.517 750.8 703.651 746.8 703.651 742.933C703.919 737.333 704.321 736 706.332 736C708.208 736 708.342 735.733 706.6 734.667C705.528 734 705.26 733.333 706.064 733.333C708.208 733.333 709.548 729.867 710.754 721.333C711.424 716.133 711.558 718.4 711.29 728.667C711.022 736.667 710.352 745.333 709.816 747.6C709.28 750.533 709.414 752 710.486 752C711.29 752 711.96 750.4 712.094 748.267C712.094 746.267 712.63 743.467 713.3 742C713.97 740.267 714.238 742.533 714.104 748.4C713.702 756 714.104 757.6 716.114 758.8C717.588 759.467 718.66 760.933 718.66 762C718.66 763.067 719.196 764 719.866 764C720.402 764 720.804 762.4 720.536 760.533C720.268 757.733 720.67 757.2 722.68 757.733C725.092 758.4 725.226 757.333 723.35 752.933C721.876 749.467 723.886 715.6 725.628 714.533C726.566 714 726.566 713.467 725.628 713.2C723.886 712.533 727.906 683.733 729.916 682.4C730.988 681.733 730.854 681.333 729.648 681.333C728.576 681.333 728.174 680 728.71 677.467C729.112 675.333 729.514 666.533 729.648 658C729.782 646.667 730.452 642.267 731.658 641.467C735.411 639.467 736.349 621.867 733.401 611.733C732.194 607.6 730.586 605.333 728.174 604.267C720.804 601.067 704.321 595.867 699.497 595.2C695.209 594.667 694.137 595.133 693.199 597.799C692.395 600.199 691.189 600.533 685.829 600.8C682.345 600.933 678.861 601.867 678.325 602.933C677.655 604 675.376 604.4 672.294 604.133C669.212 603.867 666.934 604.4 666.264 605.6C665.326 606.933 665.058 606.8 665.058 605.067C665.058 602.4 661.842 602.667 658.358 605.733C656.08 607.6 655.678 607.6 655.678 606C655.678 603.2 652.06 603.467 650.451 606.267C648.575 609.6 647.101 607.467 647.235 601.733C647.369 598.8 646.967 597.6 646.297 598.667C645.761 599.6 644.019 600 642.411 599.6C640.803 599.2 639.597 599.467 639.597 600.133C639.597 600.8 640.803 601.333 642.277 601.333C646.029 601.333 645.627 602.8 640.937 606.533C636.247 610.133 635.711 612.533 639.731 611.333C641.741 610.667 642.277 610.8 641.741 611.867C641.205 612.667 641.607 613.333 642.813 613.333C643.885 613.333 645.493 612.267 646.297 610.933C647.637 608.933 647.637 608.933 647.101 611.333C646.297 614 646.967 614.133 663.986 614.4C673.768 614.667 681.809 614.933 681.943 615.067C682.613 615.733 641.473 651.6 634.773 656.4C631.155 658.933 623.383 663.467 617.486 666.533C605.694 672.667 606.364 671.733 618.826 664.667C623.249 662.133 625.795 660 624.321 660C622.981 660 615.208 663.867 606.9 668.533C578.089 684.933 555.978 694.8 526.095 704.533C507.334 710.533 481.874 715.867 469.679 716.133C466.195 716.267 461.639 716.667 459.361 717.2L455.341 718.133L460.031 719.733C464.051 721.2 464.453 721.6 462.309 722.8C461.103 723.6 457.485 724 454.269 723.733C449.31 723.333 448.64 722.933 449.042 720.267C449.444 717.467 449.042 717.333 440.6 717.333C434.972 717.333 432.024 717.867 432.56 718.667C432.962 719.333 434.704 720 436.312 720C438.724 720 438.858 720.267 437.25 721.333C434.57 723.067 427.468 723.067 428.54 721.333C429.076 720.533 427.602 720 424.921 720C421.571 720 421.035 719.6 422.509 718.667C423.715 717.867 423.849 717.333 422.911 717.333C422.107 717.333 420.365 716.933 419.025 716.4C417.551 715.867 417.015 716 417.551 716.933C419.025 719.333 406.027 720.533 400.399 718.533C396.512 717.067 395.306 717.067 394.502 718.4C393.832 719.6 392.09 719.733 388.204 718.8C385.39 718.133 384.05 717.6 385.39 717.467C389.678 717.2 386.596 715.067 380.7 714.133C376.814 713.467 375.608 712.8 376.814 712C378.154 711.2 377.35 710.267 373.464 708.267C370.65 706.8 366.763 705.333 364.887 704.8C361.671 703.867 361.671 704 365.557 707.333C368.371 709.867 368.639 710.533 366.629 709.467C365.021 708.667 361.537 708 358.857 708C355.909 708 353.765 707.2 353.363 706C352.827 704.933 351.621 704 350.549 704C349.477 704 349.075 704.667 349.611 705.6C351.085 707.867 343.313 706 333.932 701.867C327.5 698.933 322.006 694.267 322.006 691.467C322.006 691.067 326.964 693.2 333.128 696C339.158 698.8 346.529 701.6 349.343 702.133C357.517 703.6 354.167 700.667 343.715 697.2C332.726 693.6 325.222 690 320.264 685.867C315.842 682.133 308.471 681.2 311.285 684.667C312.491 686.133 312.625 687.2 311.687 688.133C309.543 690.267 305.121 687.333 303.513 682.667C302.575 680.267 301.101 678.667 299.627 678.667C298.287 678.667 296.277 678 295.205 677.2C293.731 676.133 294.401 676 298.287 676.267C302.173 676.667 302.977 676.4 301.637 675.2C299.493 673.2 283.01 666.667 280.33 666.667C277.65 666.667 275.104 664.133 275.908 662.133C276.176 661.333 274.434 659.467 271.754 658.133C269.208 656.8 266.26 654.267 265.188 652.667C264.116 650.933 257.951 646.533 251.653 642.667C245.355 638.8 240.263 635.2 240.263 634.533C240.263 634 236.511 630 232.089 625.733C204.484 599.733 185.991 578.533 154.634 537.333C121.803 494.133 114.164 482.133 96.8777 448.667C74.0969 404.267 58.6864 357.467 45.2859 292.133C36.9776 251.333 32.8235 221.467 31.2154 190.667C30.4114 175.067 29.0713 161.867 27.8653 158C26.2572 152.667 26.1232 149.733 27.3293 143.467C28.4013 137.733 28.2673 133.867 27.0612 128.933C25.9892 124.267 25.7212 116.133 26.5252 101.467C27.0612 90 27.3293 77.8667 27.3293 74.4C27.1952 71.0667 27.7313 65.7334 28.4013 62.8C29.0713 59.6 29.0713 57.3334 28.4013 57.3334C27.7313 57.3334 27.1952 56.4 27.1952 55.2C27.1952 54.1333 26.6592 53.6 25.8552 54C25.0512 54.4 24.3811 61.2 24.3811 69.0667C24.2471 76.9334 23.7111 87.8667 23.1751 93.3334C22.3711 100 22.2371 96.1334 22.7731 81.6C23.1751 68.8 22.9071 60 22.1031 60C21.433 60 20.495 71.3334 19.959 85.3334C19.289 106.4 19.423 111.2 21.031 113.6C22.2371 115.6 22.6391 118.133 22.1031 120.667L21.299 124.667L20.361 120.667C18.7529 113.333 19.155 144 21.165 171.333C22.2371 185.867 22.7731 198.133 22.5051 198.533C22.1031 198.8 21.8351 198.133 21.8351 196.933C21.8351 195.733 21.299 194.667 20.495 194.667C18.4849 194.667 18.887 197.867 21.9691 206.933C24.2471 213.2 24.6492 216 23.5771 218.533C21.7011 223.6 26.2572 261.333 32.0194 289.333C34.6995 302.133 36.9776 312.933 37.1116 313.333C37.1116 313.733 36.7096 314.267 35.9056 314.667C35.1015 315.067 34.1635 311.733 33.7615 306.667C33.2255 301.867 31.6174 293.733 30.0093 288.667C26.9272 278 22.6391 252.667 20.495 231.333C19.691 223.2 17.8149 208 16.3409 197.333C14.8668 186.667 13.7948 174.933 13.9288 171.333C14.0628 167.6 13.7948 155.333 13.2588 144C12.7227 132.667 12.8567 112.8 13.3928 100C14.0628 87.2 14.1968 74.5333 13.7948 72C12.5887 64.5333 11.1147 94 10.8467 132.667C10.7127 160 10.4447 164.533 9.64062 154C8.16657 132.933 9.64062 66.9334 12.0527 48.4C13.3928 37.7334 13.7948 29.6 13.1247 25.0667C12.5887 21.2 12.1867 14 12.1867 8.93335C12.3207 4.00002 12.1867 0 11.9187 0C11.6507 0 10.8467 2.53337 10.0426 5.60004ZM22.7731 143.6C22.5051 146.4 22.2371 144.133 22.2371 138.667C22.2371 133.2 22.5051 130.933 22.7731 133.6C23.0411 136.4 23.0411 140.933 22.7731 143.6ZM25.4532 192.267C25.0512 193.2 24.7832 192.533 24.7832 190.667C24.7832 188.8 25.0512 188.133 25.4532 188.933C25.7212 189.867 25.7212 191.467 25.4532 192.267ZM42.3378 336C42.8738 338.533 42.0698 337.067 40.5957 332.667C39.1217 328.267 38.0496 323.733 38.0496 322.667C38.1836 320.133 41.2658 329.733 42.3378 336ZM47.698 355.333L48.502 359.333L46.6259 355.333C45.5539 353.067 44.7499 350.133 44.7499 348.667V346L45.8219 348.667C46.3579 350.133 47.296 353.067 47.698 355.333ZM675.778 609.333C675.778 610 675.242 610.667 674.438 610.667C673.768 610.667 673.098 610 673.098 609.333C673.098 608.533 673.768 608 674.438 608C675.242 608 675.778 608.533 675.778 609.333ZM686.499 616.8C685.427 617.867 683.417 619.467 681.943 620.267C679.397 621.6 679.531 621.333 682.345 618.133C685.829 614.533 689.447 613.2 686.499 616.8ZM691.189 617.333C687.571 621.333 689.581 621.867 693.199 618C694.941 616.133 697.755 614.667 699.631 614.667H702.847L699.095 618.4C691.323 626 670.016 642.8 657.956 650.8C644.689 659.6 645.091 659.067 662.11 644C668.14 638.667 672.964 633.6 672.696 632.8C672.428 632 674.84 629.6 678.057 627.467C681.273 625.467 685.427 621.6 687.437 619.2C689.313 616.667 691.457 614.667 692.261 614.667C692.931 614.667 692.529 615.867 691.189 617.333ZM707.27 640C707.672 640.667 707.136 641.333 705.93 641.333C704.723 641.333 704.187 640.667 704.589 640C704.991 639.2 705.661 638.667 705.93 638.667C706.198 638.667 706.868 639.2 707.27 640ZM658.358 643.2C658.358 643.467 656.08 645.333 653.4 647.333L648.307 650.8L652.998 646.8C657.554 642.667 658.358 642.133 658.358 643.2ZM562.276 697.333C561.874 698.8 561.07 700 560.4 700C558.926 700 558.926 699.6 559.998 696.8C561.204 693.733 563.08 694.133 562.276 697.333ZM574.471 700C573.801 700.667 572.059 701.467 570.585 701.733C569.111 702 566.833 702.667 565.627 703.067C557.318 706.267 556.782 704.933 564.956 701.333C570.987 698.533 576.749 697.733 574.471 700ZM527.033 707.867C525.961 708.533 523.549 709.333 521.673 709.867C518.859 710.533 518.993 710.267 522.343 708.667C526.631 706.667 530.383 706 527.033 707.867ZM362.207 710.667C363.949 711.733 363.949 712 361.939 712C360.733 712 359.259 711.333 358.857 710.667C357.785 708.933 359.527 708.933 362.207 710.667ZM502.912 716C498.892 717.2 492.862 718.667 489.646 719.2C484.42 720 483.884 719.867 485.492 718C486.564 716.8 489.378 716 493.398 716C496.748 716 500.5 715.333 501.572 714.667C502.644 714 505.056 713.467 506.932 713.467C509.21 713.6 507.87 714.4 502.912 716ZM482.142 721.333C481.739 722 480.399 722.667 479.327 722.667C478.255 722.667 477.719 722 478.121 721.333C478.523 720.533 479.863 720 480.935 720C482.007 720 482.544 720.533 482.142 721.333ZM502.51 723.467C502.108 723.867 500.902 724 499.964 723.6C498.892 723.2 499.294 722.8 500.768 722.8C502.242 722.667 503.046 723.067 502.51 723.467ZM471.823 746.267C469.679 746.533 466.463 746.533 464.453 746.267C462.309 746 464.051 745.733 468.071 745.733C472.091 745.733 473.833 746 471.823 746.267Z"/>
            </mask>
            <path d="M10.0426 5.60004C9.23861 8.80004 8.16657 16 7.76455 21.6C6.69252 32.6667 4.41444 34.5333 4.41444 24.2667C4.41444 18.6667 4.28043 18.4 2.40436 20.8C0.126282 23.7334 -0.275732 25.8667 1.73434 24.6667C2.53837 24.1334 3.07439 25.8667 3.07439 28.9333C3.07439 31.8667 3.61041 34.6667 4.41444 35.4667C5.21846 36.2667 4.95045 37.8667 3.4764 40C1.60033 42.6667 1.33233 46.2667 1.46633 62.5334C1.60034 73.2001 1.19832 85.4667 0.662301 89.6C-1.34777 102.8 1.46633 166.267 5.75448 210C9.90863 251.333 22.9071 318.4 32.6894 348.667C36.1736 359.6 37.7816 366.8 37.2456 369.067C36.7096 371.733 37.3796 374 39.9257 377.333C41.8018 379.867 44.3479 385.333 45.5539 389.333C48.904 400.8 62.8405 435.067 71.6848 453.333C76.107 462.533 79.8591 471.2 80.1271 472.667C80.2611 474.133 80.5292 475.867 80.6632 476.4C80.6632 477.067 81.3332 477.2 82.0032 476.8C82.6732 476.4 86.5594 481.867 90.5795 489.067C100.63 506.533 130.513 552.133 141.635 567.067C146.728 573.733 150.882 580.133 151.15 581.2C151.284 582.4 152.222 583.333 153.16 583.333C154.232 583.333 156.644 586.8 158.788 590.933C160.798 595.2 163.746 598.8 165.22 599.333C166.694 599.733 171.384 604.533 175.807 609.733C180.229 615.067 187.331 622.933 191.887 627.2C196.309 631.6 199.659 635.6 199.391 636.133C198.989 636.667 200.195 638 201.803 639.067C203.546 640.133 211.184 646.933 218.956 654C236.243 670 259.694 687.2 288.505 705.067C290.381 706.267 292.123 707.2 292.525 707.2C292.927 707.067 301.637 711.2 311.955 716.267C322.274 721.333 337.684 727.6 346.127 730.267C358.991 734.4 361.001 735.333 358.187 736.267C356.043 736.933 357.115 737.067 361.537 736.667C365.959 736.267 370.784 736.933 375.608 738.533L382.978 741.067L376.278 740.533L369.577 740L376.278 742C383.782 744.267 391.822 744.667 386.998 742.667C384.586 741.6 384.586 741.467 387.668 741.467C389.544 741.467 398.255 742.267 407.099 743.333C415.943 744.4 425.591 745.333 428.54 745.467C431.488 745.467 433.096 745.867 432.158 746.267C431.354 746.533 430.55 747.467 430.55 748.267C430.55 749.067 432.694 749.333 436.312 748.8C439.394 748.267 443.816 748 445.96 748.133C472.627 749.733 507.87 746.267 527.837 739.867C534.939 737.6 543.516 735.333 546.866 734.667C555.844 733.067 585.191 721.333 600.468 713.333C636.247 694.4 663.45 675.467 686.901 653.333C694.941 645.733 701.239 640.667 701.239 641.867C701.239 643.2 702.043 643.6 703.249 643.2C704.724 642.533 704.991 642.933 704.455 644.533C704.053 645.733 704.321 646.667 705.125 646.667C707.94 646.667 706.6 649.333 703.249 650.667C701.373 651.333 699.899 652.267 699.899 652.667C699.899 653.2 700.569 653.067 701.239 652.667C702.713 651.733 706.6 655.067 706.6 657.2C706.6 658 705.662 658.667 704.589 658.667C703.517 658.667 702.579 657.733 702.579 656.667C702.579 655.6 702.043 654.667 701.239 654.667C700.569 654.667 699.899 655.467 699.899 656.533C699.899 657.6 699.095 658.8 698.157 659.067C697.353 659.467 698.693 659.867 701.239 660C705.528 660.133 705.662 660.267 702.847 661.467C701.105 662.133 698.961 662.267 698.291 661.733C697.353 661.2 697.219 661.6 697.889 662.667C699.095 664.667 699.229 666.133 700.435 688.667C701.239 700.8 700.837 707.067 699.363 714.4C698.157 719.733 697.219 726.267 697.219 728.8C697.219 731.467 696.549 734.667 695.745 736.133C694.941 737.733 694.807 739.467 695.611 740.4C696.281 741.333 696.683 744.267 696.549 747.067C696.415 749.867 696.817 752.4 697.487 752.8C698.157 753.2 697.621 754.4 696.281 755.467C694.941 756.4 694.539 757.333 695.343 757.333C696.281 757.333 696.817 758.4 696.683 759.733C696.549 761.333 697.755 762.133 700.569 762.4C702.847 762.533 704.053 762.267 703.249 761.733C700.435 759.6 699.095 755.2 700.033 751.333C700.703 748.133 700.971 748 701.105 750.267C701.105 752 701.775 753.333 702.445 753.333C703.115 753.333 703.651 752.533 703.517 751.6C703.517 750.8 703.651 746.8 703.651 742.933C703.919 737.333 704.321 736 706.332 736C708.208 736 708.342 735.733 706.6 734.667C705.528 734 705.26 733.333 706.064 733.333C708.208 733.333 709.548 729.867 710.754 721.333C711.424 716.133 711.558 718.4 711.29 728.667C711.022 736.667 710.352 745.333 709.816 747.6C709.28 750.533 709.414 752 710.486 752C711.29 752 711.96 750.4 712.094 748.267C712.094 746.267 712.63 743.467 713.3 742C713.97 740.267 714.238 742.533 714.104 748.4C713.702 756 714.104 757.6 716.114 758.8C717.588 759.467 718.66 760.933 718.66 762C718.66 763.067 719.196 764 719.866 764C720.402 764 720.804 762.4 720.536 760.533C720.268 757.733 720.67 757.2 722.68 757.733C725.092 758.4 725.226 757.333 723.35 752.933C721.876 749.467 723.886 715.6 725.628 714.533C726.566 714 726.566 713.467 725.628 713.2C723.886 712.533 727.906 683.733 729.916 682.4C730.988 681.733 730.854 681.333 729.648 681.333C728.576 681.333 728.174 680 728.71 677.467C729.112 675.333 729.514 666.533 729.648 658C729.782 646.667 730.452 642.267 731.658 641.467C735.411 639.467 736.349 621.867 733.401 611.733C732.194 607.6 730.586 605.333 728.174 604.267C720.804 601.067 704.321 595.867 699.497 595.2C695.209 594.667 694.137 595.133 693.199 597.799C692.395 600.199 691.189 600.533 685.829 600.8C682.345 600.933 678.861 601.867 678.325 602.933C677.655 604 675.376 604.4 672.294 604.133C669.212 603.867 666.934 604.4 666.264 605.6C665.326 606.933 665.058 606.8 665.058 605.067C665.058 602.4 661.842 602.667 658.358 605.733C656.08 607.6 655.678 607.6 655.678 606C655.678 603.2 652.06 603.467 650.451 606.267C648.575 609.6 647.101 607.467 647.235 601.733C647.369 598.8 646.967 597.6 646.297 598.667C645.761 599.6 644.019 600 642.411 599.6C640.803 599.2 639.597 599.467 639.597 600.133C639.597 600.8 640.803 601.333 642.277 601.333C646.029 601.333 645.627 602.8 640.937 606.533C636.247 610.133 635.711 612.533 639.731 611.333C641.741 610.667 642.277 610.8 641.741 611.867C641.205 612.667 641.607 613.333 642.813 613.333C643.885 613.333 645.493 612.267 646.297 610.933C647.637 608.933 647.637 608.933 647.101 611.333C646.297 614 646.967 614.133 663.986 614.4C673.768 614.667 681.809 614.933 681.943 615.067C682.613 615.733 641.473 651.6 634.773 656.4C631.155 658.933 623.383 663.467 617.486 666.533C605.694 672.667 606.364 671.733 618.826 664.667C623.249 662.133 625.795 660 624.321 660C622.981 660 615.208 663.867 606.9 668.533C578.089 684.933 555.978 694.8 526.095 704.533C507.334 710.533 481.874 715.867 469.679 716.133C466.195 716.267 461.639 716.667 459.361 717.2L455.341 718.133L460.031 719.733C464.051 721.2 464.453 721.6 462.309 722.8C461.103 723.6 457.485 724 454.269 723.733C449.31 723.333 448.64 722.933 449.042 720.267C449.444 717.467 449.042 717.333 440.6 717.333C434.972 717.333 432.024 717.867 432.56 718.667C432.962 719.333 434.704 720 436.312 720C438.724 720 438.858 720.267 437.25 721.333C434.57 723.067 427.468 723.067 428.54 721.333C429.076 720.533 427.602 720 424.921 720C421.571 720 421.035 719.6 422.509 718.667C423.715 717.867 423.849 717.333 422.911 717.333C422.107 717.333 420.365 716.933 419.025 716.4C417.551 715.867 417.015 716 417.551 716.933C419.025 719.333 406.027 720.533 400.399 718.533C396.512 717.067 395.306 717.067 394.502 718.4C393.832 719.6 392.09 719.733 388.204 718.8C385.39 718.133 384.05 717.6 385.39 717.467C389.678 717.2 386.596 715.067 380.7 714.133C376.814 713.467 375.608 712.8 376.814 712C378.154 711.2 377.35 710.267 373.464 708.267C370.65 706.8 366.763 705.333 364.887 704.8C361.671 703.867 361.671 704 365.557 707.333C368.371 709.867 368.639 710.533 366.629 709.467C365.021 708.667 361.537 708 358.857 708C355.909 708 353.765 707.2 353.363 706C352.827 704.933 351.621 704 350.549 704C349.477 704 349.075 704.667 349.611 705.6C351.085 707.867 343.313 706 333.932 701.867C327.5 698.933 322.006 694.267 322.006 691.467C322.006 691.067 326.964 693.2 333.128 696C339.158 698.8 346.529 701.6 349.343 702.133C357.517 703.6 354.167 700.667 343.715 697.2C332.726 693.6 325.222 690 320.264 685.867C315.842 682.133 308.471 681.2 311.285 684.667C312.491 686.133 312.625 687.2 311.687 688.133C309.543 690.267 305.121 687.333 303.513 682.667C302.575 680.267 301.101 678.667 299.627 678.667C298.287 678.667 296.277 678 295.205 677.2C293.731 676.133 294.401 676 298.287 676.267C302.173 676.667 302.977 676.4 301.637 675.2C299.493 673.2 283.01 666.667 280.33 666.667C277.65 666.667 275.104 664.133 275.908 662.133C276.176 661.333 274.434 659.467 271.754 658.133C269.208 656.8 266.26 654.267 265.188 652.667C264.116 650.933 257.951 646.533 251.653 642.667C245.355 638.8 240.263 635.2 240.263 634.533C240.263 634 236.511 630 232.089 625.733C204.484 599.733 185.991 578.533 154.634 537.333C121.803 494.133 114.164 482.133 96.8777 448.667C74.0969 404.267 58.6864 357.467 45.2859 292.133C36.9776 251.333 32.8235 221.467 31.2154 190.667C30.4114 175.067 29.0713 161.867 27.8653 158C26.2572 152.667 26.1232 149.733 27.3293 143.467C28.4013 137.733 28.2673 133.867 27.0612 128.933C25.9892 124.267 25.7212 116.133 26.5252 101.467C27.0612 90 27.3293 77.8667 27.3293 74.4C27.1952 71.0667 27.7313 65.7334 28.4013 62.8C29.0713 59.6 29.0713 57.3334 28.4013 57.3334C27.7313 57.3334 27.1952 56.4 27.1952 55.2C27.1952 54.1333 26.6592 53.6 25.8552 54C25.0512 54.4 24.3811 61.2 24.3811 69.0667C24.2471 76.9334 23.7111 87.8667 23.1751 93.3334C22.3711 100 22.2371 96.1334 22.7731 81.6C23.1751 68.8 22.9071 60 22.1031 60C21.433 60 20.495 71.3334 19.959 85.3334C19.289 106.4 19.423 111.2 21.031 113.6C22.2371 115.6 22.6391 118.133 22.1031 120.667L21.299 124.667L20.361 120.667C18.7529 113.333 19.155 144 21.165 171.333C22.2371 185.867 22.7731 198.133 22.5051 198.533C22.1031 198.8 21.8351 198.133 21.8351 196.933C21.8351 195.733 21.299 194.667 20.495 194.667C18.4849 194.667 18.887 197.867 21.9691 206.933C24.2471 213.2 24.6492 216 23.5771 218.533C21.7011 223.6 26.2572 261.333 32.0194 289.333C34.6995 302.133 36.9776 312.933 37.1116 313.333C37.1116 313.733 36.7096 314.267 35.9056 314.667C35.1015 315.067 34.1635 311.733 33.7615 306.667C33.2255 301.867 31.6174 293.733 30.0093 288.667C26.9272 278 22.6391 252.667 20.495 231.333C19.691 223.2 17.8149 208 16.3409 197.333C14.8668 186.667 13.7948 174.933 13.9288 171.333C14.0628 167.6 13.7948 155.333 13.2588 144C12.7227 132.667 12.8567 112.8 13.3928 100C14.0628 87.2 14.1968 74.5333 13.7948 72C12.5887 64.5333 11.1147 94 10.8467 132.667C10.7127 160 10.4447 164.533 9.64062 154C8.16657 132.933 9.64062 66.9334 12.0527 48.4C13.3928 37.7334 13.7948 29.6 13.1247 25.0667C12.5887 21.2 12.1867 14 12.1867 8.93335C12.3207 4.00002 12.1867 0 11.9187 0C11.6507 0 10.8467 2.53337 10.0426 5.60004ZM22.7731 143.6C22.5051 146.4 22.2371 144.133 22.2371 138.667C22.2371 133.2 22.5051 130.933 22.7731 133.6C23.0411 136.4 23.0411 140.933 22.7731 143.6ZM25.4532 192.267C25.0512 193.2 24.7832 192.533 24.7832 190.667C24.7832 188.8 25.0512 188.133 25.4532 188.933C25.7212 189.867 25.7212 191.467 25.4532 192.267ZM42.3378 336C42.8738 338.533 42.0698 337.067 40.5957 332.667C39.1217 328.267 38.0496 323.733 38.0496 322.667C38.1836 320.133 41.2658 329.733 42.3378 336ZM47.698 355.333L48.502 359.333L46.6259 355.333C45.5539 353.067 44.7499 350.133 44.7499 348.667V346L45.8219 348.667C46.3579 350.133 47.296 353.067 47.698 355.333ZM675.778 609.333C675.778 610 675.242 610.667 674.438 610.667C673.768 610.667 673.098 610 673.098 609.333C673.098 608.533 673.768 608 674.438 608C675.242 608 675.778 608.533 675.778 609.333ZM686.499 616.8C685.427 617.867 683.417 619.467 681.943 620.267C679.397 621.6 679.531 621.333 682.345 618.133C685.829 614.533 689.447 613.2 686.499 616.8ZM691.189 617.333C687.571 621.333 689.581 621.867 693.199 618C694.941 616.133 697.755 614.667 699.631 614.667H702.847L699.095 618.4C691.323 626 670.016 642.8 657.956 650.8C644.689 659.6 645.091 659.067 662.11 644C668.14 638.667 672.964 633.6 672.696 632.8C672.428 632 674.84 629.6 678.057 627.467C681.273 625.467 685.427 621.6 687.437 619.2C689.313 616.667 691.457 614.667 692.261 614.667C692.931 614.667 692.529 615.867 691.189 617.333ZM707.27 640C707.672 640.667 707.136 641.333 705.93 641.333C704.723 641.333 704.187 640.667 704.589 640C704.991 639.2 705.661 638.667 705.93 638.667C706.198 638.667 706.868 639.2 707.27 640ZM658.358 643.2C658.358 643.467 656.08 645.333 653.4 647.333L648.307 650.8L652.998 646.8C657.554 642.667 658.358 642.133 658.358 643.2ZM562.276 697.333C561.874 698.8 561.07 700 560.4 700C558.926 700 558.926 699.6 559.998 696.8C561.204 693.733 563.08 694.133 562.276 697.333ZM574.471 700C573.801 700.667 572.059 701.467 570.585 701.733C569.111 702 566.833 702.667 565.627 703.067C557.318 706.267 556.782 704.933 564.956 701.333C570.987 698.533 576.749 697.733 574.471 700ZM527.033 707.867C525.961 708.533 523.549 709.333 521.673 709.867C518.859 710.533 518.993 710.267 522.343 708.667C526.631 706.667 530.383 706 527.033 707.867ZM362.207 710.667C363.949 711.733 363.949 712 361.939 712C360.733 712 359.259 711.333 358.857 710.667C357.785 708.933 359.527 708.933 362.207 710.667ZM502.912 716C498.892 717.2 492.862 718.667 489.646 719.2C484.42 720 483.884 719.867 485.492 718C486.564 716.8 489.378 716 493.398 716C496.748 716 500.5 715.333 501.572 714.667C502.644 714 505.056 713.467 506.932 713.467C509.21 713.6 507.87 714.4 502.912 716ZM482.142 721.333C481.739 722 480.399 722.667 479.327 722.667C478.255 722.667 477.719 722 478.121 721.333C478.523 720.533 479.863 720 480.935 720C482.007 720 482.544 720.533 482.142 721.333ZM502.51 723.467C502.108 723.867 500.902 724 499.964 723.6C498.892 723.2 499.294 722.8 500.768 722.8C502.242 722.667 503.046 723.067 502.51 723.467ZM471.823 746.267C469.679 746.533 466.463 746.533 464.453 746.267C462.309 746 464.051 745.733 468.071 745.733C472.091 745.733 473.833 746 471.823 746.267Z" fill="black" stroke="${colorCurrent}" stroke-width="0.266667" mask="url(#path-1-inside-1_6727_57297)"/>
            </mask>
            <g mask="url(#mask0_6727_57297)">
            <path d="M18.5 2V209.5L61 406L150.5 549L260.5 668.5L386.5 726.5L502.5 734.5L639.5 668.5L729 605.5M729 605.5L707 761M729 605.5H617.5" stroke="${colorCurrent}" stroke-width="49"/>
            </g>
          </svg>`;

        let svgElement2 = document.querySelectorAll(".line-unique path");

        // Timeline pour l'animation
        const timeline = gsap.timeline({
          scrollTrigger: {
            trigger: word,
            start: "top bottom",
            end: "bottom center",
            scrub: 1,
            toggleActions: "play reverse play reverse",
          },
        });

        // Animation du dessin SVG

        // Gestion asynchrone pour les lettres
        letterSource.getLetters("U,N,I,Q,U,E").then((letters) => {
          const svgHTML = letters
            .map((svg) =>
              svg !== "*" ? `<span>${svg}</span>` : "<b class='space'></b>"
            )
            .join("");

          word.innerHTML += `
              <div class="lm-typo top t-unique absolute maindex z-9 rotate ro-10 ">
                ${svgHTML}
              `;

          // Animation des lettres
          const tlLetterSourceAnime = prepareAnimationHandler.animeLetterSource(
            word,
            70,
            0.1,
            colorCurrent,
            1.5
          );

          timeline.fromTo(
            svgElement2,
            { drawSVG: "0%" },
            { drawSVG: "100%", duration: 2.5, ease: "power2.inOut" }
          );

          // Ajouter les animations des lettres dans une nouvelle timeline synchronisée
          timeline.add(tlLetterSourceAnime.play(), "+=0.5");
        });
      }
    });
  }

  static animateLetters(letters) {
    letters.forEach((letter, i) => {
      gsap.to(letter, {
        opacity: 1,
        delay: i * 0.05,
        duration: 0.5,
      });
    });
  }

  static eraseText() {
    const tl = prepareAnimationHandler.eraseText();

    tl.play();
  }

  static initScrollPaddingAnimation() {
    const section = document.querySelector(".section-why");
    const container = document.querySelector(".bloc-quality");

    gsap.to(section, {
      scrollTrigger: {
        trigger: section,
        start: "top bottom",
        end: "bottom bottom",
        scrub: true,
        onEnter: () => {
          if (!agenceHandler.onEnter) {
            agenceHandler.onEnter = true;
            letterSource
              .getLetters("P,O,U,R,Q,U,O,I,*,N,O,U,S,*,INTE")
              .then((letters) => {
                const container = document.querySelector(
                  ".text-section-skills"
                );
                const svgHTML = letters
                  .map((svg) =>
                    svg != "*"
                      ? "<span>" + svg + "</span>"
                      : "<b class='space'></b>"
                  )
                  .join("");
                container.innerHTML += `<div class="lm-typo index z-9">${svgHTML}</div>`;

                const tlLetterSourceAnime =
                  prepareAnimationHandler.animeLetterSource(
                    container,
                    50,
                    0.5,
                    "var(--e-global-color-0259c30)",
                    1
                  );
                return tlLetterSourceAnime.play();
              })
              .catch((error) => {
                console.error("Une erreur s'est produite :", error);
              });

            letterSource
              .getLetters(
                "P,A,R,C,E,*,Q,U,VIRGULE,E,N,*,P,L,U,S,*,D,VIRGULE,EACCENTCIRCONFLEXE,T,R,E,*,T,R,EACCENTGRAVE,S,*,F,O,R,T,S,*,O,N,*,L,E,*,F,A,I,T,*,T,O,U,J,O,U,R,S,*,A,V,E,C,*,H,U,M,O,U,R"
              )
              .then((letters) => {
                const container = document.querySelector(
                  ".desc-section-skills"
                );

                const svgHTML = letters
                  .map((svg) =>
                    svg !== "*"
                      ? `<span>${svg}</span>`
                      : "<b class='space'></b>"
                  )
                  .join("");
                container.innerHTML += `<div class="lm-typo index z-9">${svgHTML}</div>`;

                const tlLetterSourceAnime =
                  prepareAnimationHandler.animeLetterSource(
                    container,
                    14,
                    0.05,
                    "#FFFFFF",
                    1.3
                  );
                return tlLetterSourceAnime.play();
              })
              .catch((error) => {
                console.error("Une erreur s'est produite :", error);
              });
          }
        },
      },
      padding: "0",
    });

    gsap.to(container, {
      scrollTrigger: {
        trigger: section,
        start: "top bottom",
        end: "bottom bottom",
        scrub: true,
      },
      borderRadius: "0",
    });
  }

  static teamImageSlider() {
    gsap.registerPlugin(Draggable, InertiaPlugin);
    const lever = document.querySelector(".lever");
    const slider1 = document.querySelector(".team_image_slider");
    const slider = document.querySelector(".swiper-text");

    const swiper = new Swiper(".team_image_slider", {
      direction: "vertical",
      slidesPerView: "auto",
      spaceBetween: 30,
      centeredSlides: true,
      loop: true,
      autoplay: false,
    });

    const swiperText = new Swiper(".swiper-text", {
      fadeEffect: {crossFade: true},
      spaceBetween: 0,
      loop: true,
      autoplay: false,
    });

    Draggable.create(lever, {
      type: "rotation",
      inertia: false,
      bounds: {minX: -40, minY: -40, maxX: 40, maxY: 40},
      onDragEnd: () => {
        if (gsap.getProperty(".lever", "rotation") > 0) {
          swiper.slideNext();
          swiperText.slideNext();
        } else if (gsap.getProperty(".lever", "rotation") < 0) {
          swiper.slidePrev();
          swiperText.slidePrev();
        }
        gsap.to(lever, {
          rotate: 0,
        });
      },
    });
  }

  static ShootTaMauvaise() {
    let textSection = document.querySelector("#ShootTaMauvaise");
    let GunPlace = document.querySelector("#GUNplace");

    ScrollTrigger.create({
      trigger: "#GUNplace",
      pin: "#GUNplace",
      start: "top top",
      end: "+=10000",
      scrub: 1,
      anticipatePin: 1,
    });
  }

  static Initialize3dRendered() {
    let navBar = document.querySelector(".elementor-element-26a7de8");

    function hideNavBar() {
      Object.assign(navBar.style, {
        "background-color": "transparent",
      });
    }

    function afficherNavBAr() {
      Object.assign(navBar.style, {
        "background-color": "var( --e-global-color-1fe2b94 )",
      });
    }

    ScrollTrigger.create({
      trigger: "#GUNplace",
      start: "top center",
      end: "bottom center",
      onEnter: () => hideNavBar(),
      onLeave: () => afficherNavBAr(),
      onEnterBack: () => hideNavBar(),
      onLeaveBack: () => afficherNavBAr(),
    });

    let colorLocal = localStorage.getItem("currentColorIndex");
    let CurrentColor = prepareAnimationHandler.colors[colorLocal];
    console.log("Initial CurrentColor:", CurrentColor);

    function updateColor() {
      colorLocal = localStorage.getItem("currentColorIndex");
      CurrentColor = prepareAnimationHandler.colors[colorLocal];
      console.log("Updated CurrentColor:", CurrentColor);
    }

    // Écouter les changements dans d'autres onglets
    window.addEventListener("storage", (event) => {
      if (event.key === "currentColorIndex") {
        updateColor();
      }
    });

    // Surveiller les changements dans le même onglet
    const originalSetItem = localStorage.setItem;
    localStorage.setItem = function (key, value) {
      originalSetItem.apply(this, arguments); // Appeler la méthode originale
      if (key === "currentColorIndex") {
        updateColor();
      }
    };

    setTimeout(() => {
      const equipe = [
        {
          prenom: "Clement",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/clément.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/clément1.png",
          phrase: `En tant que chef de projet technique <span style='color: ${CurrentColor}' class='yellowText'>( il a insisté sur le terme chef…)</span>, il s’occupe de la gestion du projet au sens large du terme : planification, coordination, communication, surveillance et assurance qualité <span style='color: ${CurrentColor}' class='yellowText'>(ça commence à faire beaucoup là non ?).</span>En interne, il est responsable de la supervision et du management des équipes <span style='color: ${CurrentColor}' class='yellowText'>(en vrai, il mange surtout des trésors pendant les réunions d'équipe)</span> pour garantir la réussite de nos missions.`,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/clementsurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/clementtotem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/clementhonte.png",
        },
        {
          prenom: "Carla",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/carla.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/carla1.png",
          phrase: `Elle a rejoint l’agence en tant que Responsable communication et marketing. Véritable couteau suisse <span style='color: ${CurrentColor}' class='yellowText'>(elle a insisté pour qu’on le dise)</span>, elle est en charge de l’animation des réseaux sociaux <span style='color: ${CurrentColor}' class='yellowText'>(même si elle préférerait faire des tiktoks)</span>, des échanges avec vous et elle contribue à la conception de la ligne éditoriale <span style='color: ${CurrentColor}' class='yellowText'>(en vrai on sait pas vraiment ce qu’elle fait mais elle le fait trop bien).</span>`,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/carlasurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/carlatotem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/carlahonte.png",
        },
        {
          prenom: "Ines",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/ines.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/ines1.png",
          phrase: `Elle gère la gestion des campagnes de communication des clients mais aussi de l’agence, la visibilité en ligne et les stratégies marketing à élaborer. Elle s’occupe de la création de contenu et de la gestion des réseaux sociaux en analysant les performances des campagnes <span style='color: ${CurrentColor}' class='yellowText'>(personne peut la test)</span>. stratégies créatives et efficaces. Elle aime explorer de nouvelles trends et tendances marketing et de communication, recherche des moyens de capter l’attention du public.`,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/inessurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/inestotem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/ineshonte.png",
        },
        {
          prenom: "Lucas",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/lucas.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/lucas1.png",
          phrase: `Au sein de l’équipe dév', Lucas c’est développeur Full Stack <span style='color: ${CurrentColor}' class='yellowText'>(ou plutôt la petite chippie).</span> Son rôle consiste à travailler sur le front des projets, en s’assurant que toute l'étendue du projet matche avec la marque. Il adore que le pole com et créa lui lance des défis toujours plus fou à réalisé <span style='color: ${CurrentColor}' class='yellowText'>(bon pas sûr que ce soit vraiment le cas).</span> Il aime décortiquer les nouvelles technos <span style='color: ${CurrentColor}' class='yellowText'>(une vrai petite fouine celui-là).</span> `,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/lucassurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/lucastotem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/lucashonte.png",
        },
        {
          prenom: "Matteo",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/matteo.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/matteo1.png",
          phrase: `C'est le benjamin du pôle dév' <span style="color: ${CurrentColor}" class="yellowText">(mais pas de panique il en a sous le capot).</span> Il Son rôle est de travailler sur l'interface front des projets pour que les projets soient alignés avec l’identité de la marque.`,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/matteosurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/matteototem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/matteohonte.png",
        },
        {
          prenom: "Manel",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/manel.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/manel1.png",
          phrase: `Elle gère la coordination et l’avancée des projets en veillant à ce que toutes les équipes boss ensemble pour atteindre leurs goals <span style='color: ${CurrentColor}' class='yellowText'>(ça lui fait plaisir d’être un petit chef).</span> Elle suit les projets de la phase de conception à la livraison <span style='color: ${CurrentColor}' class='yellowText'>(…)</span>. Toujours à courir à droite à gauche, elle fait un coucou à la créa’ pour aller debrief au pôle dév’ et faire la passe décisive au pôle com’.`,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/manelsurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/maneltotem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/manelhonte.png",
        },
        {
          prenom: "Marie",
          photo1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/marie.png",
          photo2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/marie1.png",
          phrase: `Directrice artistique, elle imagine et façonne l’univers visuel des marques, que ce soit pour le print ou le digital <span style='color: ${CurrentColor}' class='yellowText'>(mais quelle star).</span> Son rôle, c’est de construire une identité forte, qui claque et qui dure dans le temps. Elle jongle entre couleurs, formes et typographies pour donner vie à tous les projets et marquer les esprits. Elle sait allier les tendances aux designs intemporels pour créer des conceptions uniques et sur-mesure <span style='color: ${CurrentColor}' class='yellowText'>(c’est la Christina Cordula du design).</span>`,
          badge1:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/mrmme/mariesurnom.png",
          badge2:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/animal/marietotem.png",
          badge3:
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/equipe/badge/song/mariehonte.png",
        },
      ];

      // on enter
      let baseCursor = document.querySelector(".container-curseur");
      let gunPlace = document.querySelector("#GUNplace");

      const scene = new THREE.Scene();
      scene.background = null; // Transparence de la scène

      const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000
      );
      camera.position.set(0, 1, 10); // Position de la caméra
      camera.lookAt(0, 0, 0);

      const renderer = new THREE.WebGLRenderer({ alpha: true });
      renderer.setSize(window.innerWidth, window.innerHeight);

      gunPlace.innerHTML = `
      <div class="GunScene">

     <img src="/wp-content/themes/lesmauvaises-front/assets/content/gun/cursor1.cur" 
      alt="Cursor" 
      class="custom-cursor" 
      id="customCursor" 
      style="position: absolute;pointer-events: none; transform: translate(-50%, -50%); z-index: 500;">

    <div class="img1 images">
      <img id='0' src="${equipe[0].photo1}" class="photo" alt="clement">
    </div>
    
    <div class="img2 images">
      <img id='1' src="${equipe[1].photo1}" class="photo" alt="carla">
    </div>
    
    <div class="img3 images">
      <img id='2' src="${equipe[2].photo1}" class="photo" alt="ines">
    </div>
    
    <div class="img4 images">
      <img id='3' src="${equipe[3].photo1}" class="photo" alt="lucas">
    </div>
    
    <div class="img5 images">
      <img id='4' src="${equipe[4].photo1}" class="photo" alt="matthéo">
    </div>
    
    <div class="img6 images">
      <img id='5' src="${equipe[5].photo1}" class="photo" alt="manel">
    </div>
    
    <div class="img7 images">
      <img id='6' src="${equipe[6].photo1}" class="photo" alt="marie">
    </div>


    <div  class="info" id="info">
      <!-- Colonne gauche -->
      <div class="infoDetails detailsImg">
        <img id='hasBeenShootTeam' src=''>
      </div>

      <!-- Colonne droite -->
      <div class="infoDetails detailsText">

        <!-- Ligne 1 -->
        <div class="div_btnClose" style='color: ${CurrentColor}'>
          <a id='btnCLose'>X</a>
        </div>

        <!-- Ligne 2 -->
        <div class="div_teamName">
          <h3 id="teamName"></h3>
        </div>

        <!-- Ligne 3 -->
        <div class="div_teamPhrase">
          <p id='teamPhrase'></p>
        </div>

        <!-- Ligne 4 avec 3 colonnes -->
        <div class="badges">
          <div class="MrMme"><img id="MrMme" src=""></div>
          <div class="Animal"><img id="Animal" src=""></div>
          <div class="Song"><img id="Song" src=""></div>
        </div>

      </div>
    </div>

    
  </div>
      `;
      gunPlace.appendChild(renderer.domElement);

      let customCursor = document.querySelector("#customCursor");

      // Ajouter la classe "hidden" lors de l'entrée dans la div
      gunPlace.addEventListener("mouseenter", () => {
        gsap.to(baseCursor, {
          onStart: () => baseCursor.classList.add("hidden"), // Ajout de la classe
        });
      });

      // Enlever la classe "hidden" lors de la sortie de la div
      gunPlace.addEventListener("mouseleave", () => {
        gsap.to(baseCursor, {
          onStart: () => baseCursor.classList.remove("hidden"), // Suppression de la classe
        });
      });

      // Écouter le mouvement de la souris
      gunPlace.addEventListener("mousemove", (event) => {
        const mouseX = event.clientX;
        const mouseY = event.clientY;

        // Mettre à jour la position du curseur
        customCursor.style.left = `${
          mouseX - customCursor.offsetWidth / 2.2 + 10
        }px`;
        customCursor.style.top = `${
          mouseY - customCursor.offsetHeight / 2.2 + 20
        }px`;
      });

      // Chargement de la texture
      const textureLoader = new THREE.TextureLoader();
      const texture = textureLoader.load(
        "/wp-content/themes/lesmauvaises-front/assets/content/gun/Material__26-color.png",
        (tex) => {
          tex.flipY = false; // Inverser l'axe Y pour correspondre à Blender
        }
      );

      // Chargement du modèle GLTF
      const loader = new GLTFLoader();
      let model;

      // Chemin vers le fichier GLB
      const modelUrl =
        "/wp-content/themes/lesmauvaises-front/assets/content/gun/untitled.glb";
      // Chargement du modèle GLTF
      loader.load(
        modelUrl,
        (gltf) => {
          model = gltf.scene;

          // Normaliser l'échelle et recentrer le modèle
          model.scale.set(1.5, 1.5, 1.5); // Ajustez si nécessaire
          model.position.set(0, -9, 0); // Ajustez selon vos besoins

          // Appliquer la texture en préservant les UVs configurés dans Blender
          model.traverse((child) => {
            if (child.isMesh) {
              child.material = new THREE.MeshStandardMaterial({
                map: texture, // Appliquer la texture
              });
              child.material.needsUpdate = true;
            }
          });

          // Ajouter le modèle à la scène
          scene.add(model);
        },
        (xhr) => {
          console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);
        },
        (error) => {
          console.error("Erreur de chargement du modèle GLTF :", error);
        }
      );

      // Lumières
      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5); // Lumière douc
      scene.add(ambientLight);

      const directionalLight = new THREE.DirectionalLight(0xffffff, 1.5);
      directionalLight.position.set(10, 10, 10);
      scene.add(directionalLight);

      function cursor() {
        document.addEventListener("mousemove", (event) => {
          const mouseX = event.clientX;
          const mouseY = event.clientY;

          if (model) {
            // Rotation dynamique du modèle
            model.rotation.y = -(mouseX * Math.PI * 0.0005); // Rotation sur l'axe Y
            model.rotation.x = -(mouseY * Math.PI * 0.0005) + 0.8; // Rotation sur l'axe X
          }
        });
      }

      let isActive = false;

      //Recule du pistolet
      function shootAnimation() {
        let scene = document.querySelector("#GUNplace");
        scene.addEventListener("click", function () {
          model.rotation.x += 0.2;
          model.position.y += 1;
          setTimeout(() => {
            model.rotation.x -= 0.2;
            model.position.y -= 1;
          }, 100);
        });

        //Musique en arriere plan
        const piou = new Audio(
          "/wp-content/themes/lesmauvaises-front/assets/content/gun/PIOU.mp3"
        );

        // Gestion des tirs
        scene.addEventListener("click", (event) => {
          const musique = new Audio(
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/BGmusiq.mp3"
          );
          if (!isActive) {
            musique.play();
            isActive = true;
          }
          piou.play();

          const clickedElement = event.target;

          setTimeout(() => {
            let imgParent = clickedElement.parentNode;

            // Récupérer les enfants du parent
            let imgChildren = imgParent.children;

            let billePositions = [];

            // Filtrer les enfants ayant la classe "bille" et récupérer leurs styles
            for (let child of imgChildren) {
              if (child.classList.contains("bille")) {
                const childPosition = {
                  top: child.style.top,
                  left: child.style.left,
                };
                billePositions.push(childPosition);
              }
            }

            // Cibler l'élément detailsImg
            let detailsImg = document.querySelector(".detailsImg");

            // Supprimer uniquement les éléments qui représentent des billes
            const existingBilles = detailsImg.querySelectorAll(".bille");
            existingBilles.forEach((bille) => bille.remove());

            // Ajouter une nouvelle bille si des positions sont disponibles
            if (billePositions.length > 0) {
              const position = billePositions[0]; // On prend la première position

              // Créer une nouvelle image pour la bille
              const newImg = document.createElement("img");
              newImg.src =
                "/wp-content/themes/lesmauvaises-front/assets/content/gun/bille9.png";
              newImg.alt = "Bille";
              newImg.classList.add("bille"); // Ajoute la classe "bille" pour identifier plus tard
              newImg.style.position = "absolute";
              newImg.style.top = position.top * 1.5;
              newImg.style.left = position.left * 1.5;
              newImg.style.height = "40px";

              // Ajouter l'image au conteneur
              detailsImg.appendChild(newImg);
            }
          }, 1000);

          let infoSection = document.querySelector("#info");

          // ANIMATION DE LA BILLE
          if (
            clickedElement.tagName === "IMG" &&
            clickedElement.classList != "bille"
          ) {
            let imageSrc = clickedElement.src;
            let imgId = clickedElement.id;

            let imgToChange = document.querySelector("#hasBeenShootTeam");
            let teamName = document.querySelector("#teamName");
            let teamPhrase = document.querySelector("#teamPhrase");

            let MrMme = document.querySelector("#MrMme");
            let Animal = document.querySelector("#Animal");
            let Song = document.querySelector("#Song");

            function stampAnimation() {
              setTimeout(() => {
                MrMme.classList.add("stamp");
                setTimeout(() => {
                  Animal.classList.add("stamp");
                  setTimeout(() => {
                    Song.classList.add("stamp");
                  }, 500);
                }, 500);
              }, 1000);
            }

            if (
              MrMme.classList.contains("stamp") &&
              Song.classList.contains("stamp") &&
              Animal.classList.contains("stamp")
            ) {
              MrMme.classList.remove("stamp");
              Animal.classList.remove("stamp");
              Song.classList.remove("stamp");
              stampAnimation();
            } else {
              stampAnimation();
            }

            imgToChange.src = equipe[imgId].photo2;

            const indexFromEnd = 4; // Conserver la logique d'origine
            const positionFromStart = imageSrc.length - indexFromEnd;

            // Vérifie si le caractère à la position est déjà "1"
            if (imageSrc[positionFromStart - 1] !== "1") {
              let before = imageSrc.slice(0, positionFromStart);
              let after = imageSrc.slice(positionFromStart);
              imageSrc = before + "1" + after;
            }

            clickedElement.src = imageSrc;

            const prenom = equipe[imgId].prenom;
            const splitName = prenom.split("").join(",");

            letterSource.getLetters(splitName).then((letters) => {
              if (teamName.innerHTML.trim() !== "") {
                teamName.innerHTML = "";
              }
              const svgHTML = letters
                .map((svg) =>
                  svg !== "*"
                    ? "<span>" + svg + "</span>"
                    : '<b class="space"></b>'
                )
                .join("");
              teamName.innerHTML +=
                '<div class="lm-typo index z-20">' + svgHTML + "</div>";
              const tlLetterSourceAnime =
                prepareAnimationHandler.animeLetterSource(
                  teamName,
                  130,
                  3,
                  "#FFFFFF",
                  1.5
                );
              tlLetterSourceAnime.play();
            });

            teamName.classList.add("rotateText");
            teamPhrase.innerHTML = `${equipe[imgId].phrase}`;

            MrMme.src = equipe[imgId].badge1;
            Animal.src = equipe[imgId].badge2;
            Song.src = equipe[imgId].badge3;

            if (clickedElement.classList.contains(`HasBeenShoot${imgId}`)) {
              clickedElement.classList.remove(`HasBeenShoot${imgId}`);
              setTimeout(() => {
                clickedElement.classList.add(`HasBeenShoot${imgId}`);
              }, 100);
            } else {
              clickedElement.classList.add(`HasBeenShoot${imgId}`);
            }

            setTimeout(() => {
              infoSection.classList.remove("hidden");
              Object.assign(infoSection.style, {
                display: "flex",
                "align-items": "center",
                "justify-content": "center",
              });
            }, 1100);
            setTimeout(() => {
              clickedElement.classList.remove("HasBeenShoot");
            }, 10000);
          }

          const img = document.createElement("img");
          const images = [
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/bille5.png",
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/bille7.png",
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/bille8.png",
            "/wp-content/themes/lesmauvaises-front/assets/content/gun/bille9.png",
          ];

          let index = 1;

          function displayNextImage() {
            img.src = images[index];
            index++;
            if (index < 3) {
              setTimeout(displayNextImage, 100);
            }
          }
          img.src = images[0];
          displayNextImage();

          img.classList.add("bille");
          const position = clickedElement.getBoundingClientRect();

          if (
            clickedElement.tagName === "CANVAS" ||
            (clickedElement.tagName === "IMG" &&
              clickedElement.classList == "bille")
          ) {
            Object.assign(img.style, {
              position: "absolute",
              left: `${event.screenX - 45}px`,
              top: `${event.screenY - 165}px`,
              display: "block",
              zIndex: 4,
              height: "55px",
            });
            gunPlace.appendChild(img);
            if (
              clickedElement.tagName === "IMG" &&
              clickedElement.classList == "bille"
            ) {
              return;
            }
          } else {
            if (
              clickedElement.tagName === "A" ||
              clickedElement.classList.contains("infoDetails")
            ) {
              return;
            }
            Object.assign(img.style, {
              position: "absolute",
              left: `${event.clientX - position.left - 40}px`,
              top: `${event.clientY - position.top}px`,
              display: "block",
              zIndex: 15,
              height: "55px",
            });
            clickedElement.parentNode.appendChild(img);
          }
        });
      }

      let btnCLose = document.querySelector("#btnCLose");
      let infoSection = document.querySelector("#info");

      btnCLose.addEventListener("click", () => {
        setTimeout(() => {
          infoSection.classList.add("hidden");
          Object.assign(infoSection.style, {
            display: "none",
          });
        }, 100);
      });

      function animate() {
        requestAnimationFrame(animate);
        renderer.render(scene, camera);
      }

      animate();
      cursor();
      shootAnimation();
    }, 1);
  }

  static SectionRoue() {
    let navBar = document.querySelector(".elementor-element-26a7de8");

    function hideNavBar() {
      Object.assign(navBar.style, {
        "background-color": "transparent",
      });
    }

    function afficherNavBAr() {
      Object.assign(navBar.style, {
        "background-color": "var( --e-global-color-1fe2b94 )",
      });
    }

    ScrollTrigger.create({
      trigger: "#placeRoue",
      start: "top center",
      end: "bottom center",
      onEnter: () => hideNavBar(),
      onLeave: () => afficherNavBAr(),
      onEnterBack: () => hideNavBar(),
      onLeaveBack: () => afficherNavBAr(),
    });



    let roueText = document.querySelector("#roue-text");

    // Ajout du contenu caché et du canvas
    roueText.innerHTML += `
      <div class="hidden-content">
          🎉 Bravo, vous avez gagné !
      </div>
      <canvas id="scratchCanvas"></canvas>
    `;
    
    // Récupération du canvas et du contexte
    const canvas = document.getElementById("scratchCanvas");
    const ctx = canvas.getContext("2d");
    
    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;
    
    // Charger une image à gratter
    const image = new Image();
    image.src = "/wp-content/themes/lesmauvaises-front/assets/content/leopard.jpg"; // Exemple d'image
    image.onload = () => {
      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);
    };
    
    // Activer le survol
    let isHovering = false;
    
    // Fonction pour "gratter" au survol
    function scratchOnHover(e) {
      const rect = canvas.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
    
      if (isHovering) {
        // Dessiner un cercle transparent pour "effacer"
        ctx.globalCompositeOperation = "destination-out";
        ctx.beginPath();
        ctx.arc(x, y, 80, 0, Math.PI * 2); // Cercle de rayon 20px
        ctx.fill();
      }
    }
    
    // Vérification de progression du grattage
    
    
    // Gestion des événements pour hover
    canvas.addEventListener("mouseenter", () => (isHovering = true));
    canvas.addEventListener("mouseleave", () => (isHovering = false));
    canvas.addEventListener("mousemove", (e) => {
      scratchOnHover(e);
    });


    
    let roue = document.querySelector("#roue");

    roue.innerHTML = `
      <div class="spinBtn">
        <img class='smiley0' src='/wp-content/themes/lesmauvaises-front/assets/content/2024/01/HAPPY-VERT.png'>
      </div>
      <div class="bigWheel">
        <div class="wheel">
            <div class="caseBorder" style="--a:1"></div>
            <div class="caseBorder" style="--a:2"></div>
            <div class="caseBorder" style="--a:3"></div>
            <div class="caseBorder" style="--a:4"></div>

            <div id='1' class="number" style="--i:1; --clr:#C72468">
              <span>CE QU'ON EST</span>
            </div>

            <div id='2' class="number" style="--i:2; --clr:#A2D2FF">
              <span>PERDU</span>
            </div>

            <div id='3' class="number" style="--i:3; --clr:#C77DFF">
              <span>CE QU'ON AIME</span>
            </div>

            <div id='4' class="number" style="--i:4; --clr:#CDDD20">
              <span>PERDU</span>
            </div>

            <div id='5' class="number" style="--i:5; --clr:#C72468">
              <span>5</span>
            </div>

            <div id='6' class="number" style="--i:6; --clr:#A2D2FF">
              <span>PERDU</span>
            </div>

            <div id='7' class="number" style="--i:7; --clr:#C77DFF">
              <span>7</span>
            </div>

            <div id='8' class="number" style="--i:8; --clr:#CDDD20">
              <span>PERDU</span>
            </div>

          </div>
        </div>
    `;

    let mainCircle = document.querySelector(".bigWheel");
    let number = gsap.utils.toArray(".number");
    let rotate = 22.5;
    let auxPrev = 5;
    let auxNext = 3;
    const step = 360 / number.length;
    const snap = gsap.utils.snap(step);

    gsap.set(mainCircle, { rotation: rotate });

    function getNextAndPrevOnNext() {
      auxPrev = (auxPrev - 1 + 8) % 8;
      auxNext = (auxNext - 1 + 8) % 8;
      let auxAux = auxPrev - 1;

      return auxAux;
    }

    function getNextAndPrevOnPrev() {
      auxPrev = (auxPrev + 1 + 8) % 8;
      auxNext = (auxNext + 1 + 8) % 8;
      let auxAux = auxPrev + 1;

      return auxAux;
    }
    const spinBtn = document.querySelector(".spinBtn");

    const draggable = Draggable.create(mainCircle, {
      type: "rotation",
      maxDuration: 2.5,
      inertia: true,
      onDrag: function () {
        mainCircle.classList.remove("ready");
        var curRotation = gsap.getProperty(mainCircle, "rotation");
        if (curRotation - rotate >= 22.5) {
          //22.5 is half of snap value
          getNextAndPrevOnNext();
          rotate = rotate + 45;
        } else if (-curRotation + rotate >= 22.5) {
          getNextAndPrevOnPrev();
          rotate = rotate - 45;
        }
      },
      snap: (value) => {
        rotate = snap(value) + 22.5;
        return rotate;
      },
      onThrowComplete: function () {
        const rect = spinBtn.getBoundingClientRect();

        const centerX = rect.left + 150;
        const centerY = rect.top;
        const elementUnderPointer = document.elementFromPoint(centerX, centerY);

        console.log(elementUnderPointer.id);
      },
    });

    mainCircle.addEventListener(
      "pointerdown",
      (e) => {
        if (draggable[0].isThrowing) {
          e.stopImmediatePropagation();
        }
      },
      { capture: true }
    );
  }
}
